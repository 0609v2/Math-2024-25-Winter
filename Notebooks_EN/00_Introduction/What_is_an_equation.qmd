---
title: Equations in Mathematics
jupyter: python3
---

## Definition of an Equation

An **equation** in mathematics is a formal expression that states that two values or expressions are equal. It consists of two parts: the left-hand side and the right-hand side, separated by an equals sign "=".

Solving equations involves finding the values of the variables (called unknowns) that make the equation true.


**Example 1**

Consider the equation $2x + 3 = 7$. In this case, we have one variable $x$. When solving the equation, we want to find the value of $x$ for which the left-hand side is equal to the right-hand side. The solution of the equation is the set

$$
\{x \in \mathbb{R} : 2x + 3 = 7\} = \{x \in \mathbb{R} : x = 2\}= \{2\}
$$

where

1. **$\{x \in \mathbb{R} : 2x + 3 = 7\}$**  
   Read as:  
   "The set of all $x$ belonging to real numbers for which $2x + 3 = 7$."

2. **$\{x \in \mathbb{R} : x = 2\}$**  
   Read as:  
   "The set of all $x$ belonging to real numbers for which $x = 2$."

3. **$\{2\}$**  
   Read as:  
   "The set containing only the number 2."

Thus, the entire construction shows that the solution to the equation $2x + 3 = 7$ is the number $x = 2$, which we write as the singleton set $\{2\}$.


**Example 2**

Consider the equation $x^2 - 4 = 0$. In this case, we have one variable $x$. When solving the equation, we want to find the value of $x$ for which the left-hand side is equal to the right-hand side. The solution of the equation is the set

$$
\{x \in \mathbb{R} : x^2 - 4 = 0\}= \{x \in \mathbb{R} : x^2 = 4\} = \{x \in \mathbb{R} : x = 2 \lor x = -2\} = \{2, -2\}
$$

where

1. **$\{x \in \mathbb{R} : x^2 - 4 = 0\}$**  
   Read as:  
   "The set of all $x$ belonging to real numbers for which $x^2 - 4 = 0$."

2. **$\{x \in \mathbb{R} : x^2 = 4\}$**  
   Read as:  
   "The set of all $x$ belonging to real numbers for which $x^2 = 4$."

3. **$\{x \in \mathbb{R} : x = 2 \lor x = -2\}$**  
   Read as:  
   "The set of all $x$ belonging to real numbers for which $x = 2$ or $x = -2$."

4. **$\{2, -2\}$**  
   Read as:  
   "The set containing the numbers 2 and -2."

Thus, the entire construction shows that the solution to the equation $x^2 - 4 = 0$ is the numbers $x = 2$ and $x = -2$, which we write as the set $\{2, -2\}$.


**Example 3**

Consider the line given by the equation $y = 2x + 1$. In this case, we have two variables $x$ and $y$. When solving the equation, we want to find the values of $x$ and $y$ for which the left-hand side is equal to the right-hand side. The solution of the equation is the set

$$
\{(x, y) \in \mathbb{R}^2 : (x \in \mathbb{R}) \land (y = 2x + 1)\} = \{(x, 2x + 1) : x \in \mathbb{R}\}
$$

where

1. **$\{(x, y) \in \mathbb{R}^2 : (x \in \mathbb{R}) \land (y = 2x + 1)\}$**  
   Read as:  
   "The set of all pairs $(x, y)$ belonging to the plane $\mathbb{R}^2$, where $x$ is a real number and $y = 2x + 1$."

2. **$\{(x, 2x + 1) : x \in \mathbb{R}\}$**  
   Read as:  
   "The set of all pairs of the form $(x, 2x + 1)$, where $x$ belongs to real numbers."

Thus, the entire construction shows that the set of points $(x, y)$ that satisfy the equation $y = 2x + 1$ can be described as the set of pairs of the form $(x, 2x + 1)$, where $x$ is a real number.


**Example 4**

Sometimes we deal with implicit equations $F(x,y)$ that cannot be written in the form $y = f(x)$ or $x = f(y)$. Solving such an equation, as above, involves finding all pairs $(x, y)$ that satisfy the equation $F(x, y)$, which we write as

$$
\{(x, y) \in \mathbb{R}^2 : F(x, y) = 0\}
$$

The equation of a circle $x^2 + y^2 = 1$ is an example of an implicit equation. Let's find its solution. Consider the following equalities

$$
\begin{cases}
y_1=+\sqrt{1-x^2}\quad \text{where } x\in[-1,1]\\
y_2=-\sqrt{1-x^2}\quad \text{where } x\in[-1,1]\\
\end{cases}
$$

We see that $y_1^2 = 1 - x^2$ and $y_2^2 = 1 - x^2$. This means that $y_1$ and $y_2$ satisfy the equation $x^2 + y^2 = 1$. Hence, the solution to the equation $x^2 + y^2 = 1$ is the set

$$
\{(x, y) \in \mathbb{R}^2 : x^2 + y^2 = 1\} = \{(x, \sqrt{1-x^2}) : x \in [-1, 1]\}\cup\{(x,-\sqrt{1-x^2}) : x \in [-1, 1]\}
$$

1. **$\{(x, y) \in \mathbb{R}^2 : x^2 + y^2 = 1\}$**  
   Read as:  
   "The set of all pairs $(x, y)$ belonging to the plane $\mathbb{R}^2$, for which $x^2 + y^2 = 1$. This is the equation of a circle with radius 1 and center at $(0, 0)$."

2. **$\{(x, \sqrt{1 - x^2}) : x \in [-1, 1]\}$**  
   Read as:  
   "The set of all pairs of the form $(x, \sqrt{1 - x^2})$, where $x$ belongs to the interval $[-1, 1]$. This is the upper semicircle."

3. **$\{(x, -\sqrt{1 - x^2}) : x \in [-1, 1]\}$**  
   Read as:  
   "The set of all pairs of the form $(x, -\sqrt{1 - x^2})$, where $x$ belongs to the interval $[-1, 1]$. This is the lower semicircle."

Thus, the entire construction shows that the set of points $(x, y)$ that satisfy the equation of the circle $x^2 + y^2 = 1$ can be described as the union of the sets: the upper semicircle $\{(x, \sqrt{1 - x^2})\}$ and the lower semicircle $\{(x, -\sqrt{1 - x^2})\}$, where $x$ belongs to the interval $[-1, 1]$.

# Now we will see how we can manipulate equations in Python

```{python}
# If we refer to an undefined variable in a function, Python will return an error
z
```

```{python}
# We can define the variable z
z = 10 # assign the value 10 to variable z
z      # display the value of variable z
```

```{python}
# We can add 1 to z
z = z + 1 # assign the value z+1 to variable z
z         # display the value of variable z
```

The problem with this approach is that it does not allow us to manipulate symbols! The above definition assigns a numerical value to the symbol rather than a symbolic one. In Python, we have the `sympy` library available, which allows us to manipulate symbols.

Below, we will show some examples of how we can manipulate symbols and equations in Python.

```{python}
# First, we import the sympy library (Symbolic Python)
import sympy as sp

# Define variables x and y as symbols
x, y = sp.symbols('x y')
```

```{python}
x # x is now a symbol
```

```{python}
x + y # Python returns x + y as an expression, not a numerical value
```

```{python}
# We can perform more complex operations on variables
expr1 = (x + y)**2 # assign the expression (x+y)^2 to variable expr1
expr1            # display the value of variable expr1
```

```{python}
# We can expand the above expression
sp.expand(expr1) # the expand command expands the expression
```

```{python}
# More complex expression
expr2 = (x + y)**5 # assign the expression (x+y)^5 to variable expr2
expr2          # display the value of variable expr2
```

```{python}
expr2_expanded = sp.expand(expr2) # expand the expression
expr2_expanded                    # display the value of variable expr2_expanded
```

```{python}
# We can substitute specific values into variables, e.g., x=2
expr2_expanded.subs(x, 2)  # subs(x, 2) substitutes x=2 into the expression
```

```{python}
# In sympy, we can define equations!
eq1 = sp.Eq(x**2, 1)
eq1
```

```{python}
# We can ask for solutions to the equation
sol_eq1 = sp.solve(eq1)
sol_eq1
```

```{python}
# Check if the first solution satisfies the equation
eq1.subs(x, sol_eq1[0]) # substitute the solution into the equation and check if it is satisfied
```

```{python}
# Check if the second solution satisfies the equation
eq1.subs(x, sol_eq1[1]) # substitute the solution into the equation and check if it is satisfied
```

```{python}
# Another example
eq2 = sp.Eq(x**2 - 4*x + 3, 0)
eq2
```

```{python}
# Solutions of the equation
sol_eq2 = sp.solve(eq2)
sol_eq2
```

```{python}
# Check the solutions
eq2.subs(x, sol_eq2[0]) and eq2.subs(x, sol_eq2[1])
```

```{python}
# Equation with two unknowns
eq3 = sp.Eq(x**2 + y**2, 1)
eq3
```

```{python}
# Solutions of a quadratic equation with two unknowns
sol_eq3 = sp.solve(eq3, y) # solve the equation for y as a function of x
sol_eq3
```

```{python}
# We can display the solutions of the equation in a more readable way
sol_eq3[0]
```

```{python}
sol_eq3[1]
```

```{python}
# Check if the solutions satisfy the equation
eq3.subs(y, sol_eq3[0]) and eq3.subs(y, sol_eq3[1])
```

```{python}
# Set the display mode for plots
import matplotlib.pyplot as plt
plt.rcParams['figure.figsize'] = [3, 3] # set plot size and aspect_ratio=1
```

```{python}
# We can also plot the solutions of the equation on the plane aspect_ratio=1
sp.plot_implicit(eq3, (x, -2, 2), (y, -2, 2));
```

```{python}
ellipse = sp.Eq(x**2/4 + y**2, 1)
ellipse
```

```{python}
# We can also plot the solutions of the equation on the plane aspect_ratio=1
sp.plot_implicit(ellipse, (x, -3, 3), (y, -3, 3));
```

```{python}
# We can also plot several equations on one plot
line = sp.Eq(y, 2*x - 1)
circle = sp.Eq(x**2 + y**2, 1)

# Plotting the circle and ellipse on one plot
p1 = sp.plot_implicit(line, (x, -2, 2), (y, -2, 2), show=False)
p2 = sp.plot_implicit(circle, (x, -2, 2), (y, -2, 2), show=False)

# Add the plots together
p1.extend(p2) # "attach"
p1.show()
```

```{python}
# Let's see where the circle and the line intersect
intersection_points = sp.solve([line, circle])
intersection_points
```

```{python}
# How to check if two equations are equivalent?

# Let's write the same in a different form
r1 = sp.Eq(x + y, 1)
r1
```

```{python}
r2 = sp.Eq(2*x - 2, -2*y)
r2
```

```{python}
# We cannot directly compare two equations, but we can check if they are equivalent
r1 == r2
```

```{python}
# But if we make an expression
ratio = (r1.lhs - r1.rhs) / (r2.lhs - r2.rhs)
ratio
```

```{python}
# A constant indicates that the equations are equivalent! A task for the student: justify why this is true.
sp.simplify(ratio)